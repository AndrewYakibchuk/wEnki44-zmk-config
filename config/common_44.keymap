/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define lower_layer LWR
#define RSE 2
#define raise_layer RSE
#define ADJ 3
#define adjust_layer ADJ
#define GME 4
#define GLR 5

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        ESCape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        BSP {
            bindings = <&kp BACKSPACE>;
            key-positions = <11 12>;
        };

        TABul {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };
    };

    macros {
        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "LANG";
        };
    };

    behaviors {
        LT2Lang: LT2Lang {
            compatible = "zmk,behavior-hold-tap";
            label = "LT2LANG";
            bindings = <&lt>, <&lang>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <38>;
        };

        lt2esclang: lt2esclang {
            compatible = "zmk,behavior-tap-dance";
            label = "LT2ESCLANG";
            #binding-cells = <0>;
            bindings = <&lt 2 ESCAPE>, <&lang>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&mt CAPS LEFT_ARROW  &mt TAB ESCAPE  &lt 1 Q  &lt 2 W  &kp E             &kp R             &kp T        &kp Y      &kp U                   &mt PLUS I       &mt NUMBER_1 O  &mt NUMBER_2 P    &mt NUMBER_3 LEFT_BRACKET  &mt RIGHT_BRACKET RIGHT
                     &kp LEFT_SHIFT  &kp A    &kp S    &kp D             &kp F             &kp G        &kp H      &kp J                   &mt MINUS K      &mt NUMBER_4 L  &mt N5 SEMICOLON  &mt NUMBER_6 SQT
                     &kp LCTRL       &kp Z    &kp X    &kp C             &kp V             &kp B        &kp N      &kp M                   &mt EQUAL COMMA  &mt N7 DOT      &mt N8 FSLH       &mt N9 BSLH
                                                       &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp SPACE    &kp ENTER  &mt UP_ARROW BACKSPACE  &mt DOWN SLASH
            >;
        };

        lower_layer {
            label = "SYM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LEFT_ALT         &lt 0 F1  &kp F2  &kp F3     &kp F4    &kp F5              &kp F6     &kp F7    &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3        &mt RGUI N0
        &mt LEFT_SHIFT PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT           &kp CARET  &kp AMPS  &kp MINUS  &kp NUMBER_4  &kp N5        &mt RCTRL NUMBER_6
        &mt LALT EQUAL       &kp N1    &kp N2  &kp N3     &kp N4    &kp N5              &kp N6     &kp N7    &kp EQUAL  &kp N7        &kp N8        &kp N9
                                               &lt 0 TAB  &trans    &kp LEFT_COMMAND    &trans     &trans    &lt 2 DEL
            >;
        };

        raise_layer {
            label = "NUM";

            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                     &trans     &trans     &lt 1 RET       &lt 1 ESC     &trans    &trans
            >;
        };

        adjust_layer {
            label = "ADJ";

            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader   &none         &none              &none         &none         &none           &none         &none         &none         &none              &none         &bootloader   &sys_reset
            &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &bt BT_CLR
            &out OUT_TOG  &tog GME      &ext_power EP_TOG  &none         &none         &none           &none         &none         &none         &ext_power EP_TOG  &tog GME      &out OUT_TOG
                                                           &trans        &none         &trans          &trans        &none         &trans
            >;
        };

        gaming_layer {
            label = "GAME";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp TAB  &kp RET    &kp Q  &kp W  &kp E      &kp R      &kp T      &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC       &mt RWIN RBKT
         &kp LCTRL  &kp A  &kp S  &kp D      &kp F      &kp G      &kp H    &kp J      &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
         &kp LALT   &kp Z  &kp X  &kp C      &kp V      &kp B      &kp N    &kp M      &kp COMMA  &kp DOT  &tog GME  &mt RALT BSLH
                                  &kp SPACE  &kp LSHFT  &mo GLR    &kp ESC  &kp RSHFT  &kp DEL
            >;
        };

        gaming_lower_layer {
            label = "GNUM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp GRAVE       &kp F8  &kp F9  &kp F10  &kp F4  &kp F5    &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp N6  &kp N7  &kp N8   &kp N9  &kp N0    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1  &kp N2  &kp N3   &kp N4  &kp N5    &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &trans
                                        &trans   &trans  &trans    &trans     &trans    &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
